{
	"info": {
		"_postman_id": "cccbb3c1-57cf-4bb7-ab41-bbbcc2d88a6f",
		"name": "API testing",
		"description": "**Swagger specification for API testing**\n\n**Version: CURRENT****Language: Swagger specification for API testing**\n\n**Description:****This Swagger specification document outlines the API endpoints and operations for testing purposes. It provides detailed information on how to interact with the API and perform various actions related to users. The API is designed to handle user management, including user creation, updating user information, retrieving user data, and deleting users.**\n\n**Host: gorest.co.in****Base Path: /public/v1/**\n\n**Tags:**\n\n- **User: Everything about Users**\n    \n\n**Schemes:**\n\n- **HTTPS**\n    \n\n**Paths:**\n\n- **/users: API endpoints for managing users**\n- **/users/{id}: API endpoints for managing users by their unique ID**\n    \n\n**Definitions:**\n\n- **User: Represents a user object with properties such as ID, name, gender, email, and status.**\n- **ApiResponse: Represents the API response object containing metadata and user data.**",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26518024",
		"_collection_link": "https://bold-sunset-914565.postman.co/workspace/New-Team-Workspace~63c0522b-607f-478c-a50f-a7c8d9f9b2cc/collection/26518024-cccbb3c1-57cf-4bb7-ab41-bbbcc2d88a6f?action=share&source=collection_link&creator=26518024"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Update a user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.request.headers.add({\r",
											"    key: 'Authorization',\r",
											"    value: 'Bearer a245aff1a147790dac11e3c93c450350a952cf65e7631ae6a61a917d0b6e24d3'\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response body contains the updated user object\", function () {\r",
											"    var requestBody = JSON.parse(pm.request.body.raw);\r",
											"    var name = requestBody.name;\r",
											"    var responseJson = pm.response.json();\r",
											"    pm.expect(responseJson.data.name).to.eql(name);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n            \"id\": 4474701,\n            \"name\": \"vivek Kumar\",\n            \"email\": \"vivekkumar@example.com\",\n            \"gender\": \"male\",\n            \"status\": \"Active\"\n        }",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/4474701",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"4474701"
									]
								},
								"description": "- **This request is used to update an existing user in the system.**\n- **Request Body: JSON object representing the updated user information.**"
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"gender\": \"<string>\",\n  \"email\": \"<email>\",\n  \"status\": \"<string>\",\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"gender\": \"<string>\",\n  \"email\": \"<email>\",\n  \"status\": \"<string>\",\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "Invalid username supplied",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"gender\": \"<string>\",\n  \"email\": \"<email>\",\n  \"status\": \"<string>\",\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": null
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"gender\": \"<string>\",\n  \"email\": \"<email>\",\n  \"status\": \"<string>\",\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"gender\": \"<string>\",\n  \"email\": \"<email>\",\n  \"status\": \"<string>\",\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.request.headers.add({\r",
											"    key: 'Authorization',\r",
											"    value: 'Bearer a245aff1a147790dac11e3c93c450350a952cf65e7631ae6a61a917d0b6e24d3'\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/4474675",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"4474675"
									]
								},
								"description": "- **This request is used to delete a user from the system.**\n- **Request Body: JSON object representing the updated user information.**\n- **This can only be done by the logged-in user.**"
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"description": "- **This path represents the API endpoints for managing users based on their unique ID. The \"{id}\" is a path parameter that should be replaced with the actual ID of the user. The operations associated with this path may include GET for retrieving a specific user by their ID, PUT for updating a user, DELETE for deleting a user, and more.**"
				},
				{
					"name": "Create a new user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.headers.add({\r",
									"    key: 'Authorization',\r",
									"    value: 'Bearer a245aff1a147790dac11e3c93c450350a952cf65e7631ae6a61a917d0b6e24d3'\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body contains the updated user object\", function () {\r",
									"    var requestBody = JSON.parse(pm.request.body.raw);\r",
									"    var name = requestBody.name;\r",
									"    var responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.data.name).to.eql(name);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"hites Kumar\",\n    \"email\": \"hitesshkumar@example.com\",\n    \"gender\": \"male\",\n    \"status\": \"Inactive\"\n}\n",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						},
						"description": "- **This request is used to create a new user in the system.**\n- **Request Body: JSON object representing the updated user information.**"
					},
					"response": [
						{
							"name": "User created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"gender\": \"<string>\",\n  \"email\": \"<email>\",\n  \"status\": \"<string>\",\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"gender\": \"<string>\",\n  \"email\": \"<email>\",\n  \"status\": \"<string>\",\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"gender\": \"<string>\",\n  \"email\": \"<email>\",\n  \"status\": \"<string>\",\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body contains the list of users\", function () {\r",
									"    var responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.data).to.be.an(\"array\");\r",
									"});\r",
									"3520528"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.headers.add({\r",
									"    key: 'Authorization',\r",
									"    value: 'Bearer a245aff1a147790dac11e3c93c450350a952cf65e7631ae6a61a917d0b6e24d3'\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						},
						"description": "- **This request is used to retrieve a list of users from the system based on a name filter.**\n- **Request Body: JSON object representing the updated user information.**"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"meta\": \"<string>\",\n  \"data\": {\n    \"gender\": \"<string>\",\n    \"email\": \"<email>\",\n    \"status\": \"<string>\",\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Users by id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.headers.add({\r",
									"    key: 'Authorization',\r",
									"    value: 'Bearer a245aff1a147790dac11e3c93c450350a952cf65e7631ae6a61a917d0b6e24d3'\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body contains the list of users\", function () {\r",
									"    var responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.data).to.be.an(\"object\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/4471619",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"4471619"
							]
						},
						"description": "- **This request is used to retrieve a specific user from the system based on their ID.**\n- **Request Body: JSON object representing the updated user information.**"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"meta\": \"<string>\",\n  \"data\": {\n    \"gender\": \"<string>\",\n    \"email\": \"<email>\",\n    \"status\": \"<string>\",\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "- **This path represents the API endpoints for managing users in your system. It is a collection of operations that allow you to create, retrieve, update, and delete users. The specific operations associated with this path include POST for creating a new user, GET for retrieving a list of users, and more.**"
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://gorest.co.in/public/v1"
		}
	]
}